# Configuration file for <https://github.com/sapcc/go-makefile-maker>

metadata:
  url: https://github.com/sapcc/swift-drive-autopilot

binaries:
  - name:        swift-drive-autopilot
    fromPackage: .
    installTo:   bin/

  - name:        logexpect
    fromPackage: ./cmd/logexpect

dockerfile:
  enabled: true
  entrypoint: ["/usr/bin/dumb-init", "--", "/usr/bin/swift-drive-autopilot"]
  extraIgnores:
    - HACKING.md
  extraPackages:
    - dumb-init
    - file
    - smartmontools
  runAsRoot: true # to execute privileged operations on disks (decrypt, format, mount)

golang:
  autoupdateableDeps: ^github.com/(?:sapcc|sap-cloud-infrastructure)/
  setGoModVersion: true

golangciLint:
  createConfig: true

githubWorkflow:
  ci:
    enabled: true

renovate:
  enabled: true
  assignees:
    - majewsky
    - SuperSandro2000

reuse:
  annotations:
    - paths:
      - pkg/parsers/fixtures/*.json
      SPDX-FileCopyrightText: SAP SE or an SAP affiliate company
      SPDX-License-Identifier: Apache-2.0

shellCheck:
  opts: '--external-sources'

# When running `make check` manually, we find it desirable to have this include the functional test suite since it has the most test coverage.
# People have muscle memory for `make check`, so this should include the functional test suite, too.
#
# But some CI systems cannot run stuff as root, so CHECK_SKIPS_FUNCTIONAL_TEST=true will allow those to skip the tests that they cannot run.
verbatim: |
  functional-test:
    ./test/run.sh

  CHECK_SKIPS_FUNCTIONAL_TEST ?= false

  ifneq ($(CHECK_SKIPS_FUNCTIONAL_TEST),true)
  check: functional-test # attach `make functional-test` as a dependency to the autogenerated `make check`
  endif
